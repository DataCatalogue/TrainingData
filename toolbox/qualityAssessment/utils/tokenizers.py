from ..const import const


def get_tokens(text: str):
    """
    Returns a tokens list from a raw text.
    Source code: https://github.com/natliblux/nautilusocr/blob/master/src/epr/features_epr.py
    """
    tokens = list()

    new_token = ''
    for c in text:
        if c == ' ' and len(new_token) > 0:
            tokens.append(new_token)
            new_token = ''
        elif c == '\n' and len(new_token) > 0:
            if new_token[-1] in const.HYPHENS:
                new_token = new_token[:-1]
            else:
                tokens.append(new_token)
                new_token = ''
        else:
            new_token += c
    if len(new_token) > 0:
        tokens.append(new_token)

    for i, token in enumerate(tokens):
        if not token[-1].isalpha():
            tokens[i] = token[:-1]
        if not token[0].isalpha():
            tokens[i] = token[1:]

    return tokens


def get_tokens_from_raw_file(text: str):
    """
    Returns a tokens list from a raw file generated by GROBID. Where first feature is a token.
    This function assures that scores
    """
    tokens = list()

    lines_raw_file = text.split('\n')
    for line in lines_raw_file:
        tokens.append(line.split(' ')[0])

    return tokens